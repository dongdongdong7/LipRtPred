% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getFP.R
\name{GetMorgan_FP}
\alias{GetMorgan_FP}
\alias{GetFMorgan_FP}
\alias{GetRDKit_FP}
\alias{GetAp_FP}
\alias{GetTt_FP}
\alias{GetMaccs_FP}
\title{Calculate molecule fingerprint}
\usage{
GetMorgan_FP(
  cmpDf,
  flavor = "CxSmiles",
  radius = 2,
  fpSize = 2048,
  count = FALSE,
  thread = 1
)

GetFMorgan_FP(
  cmpDf,
  flavor = "CxSmiles",
  radius = 2,
  fpSize = 2048,
  count = FALSE,
  thread = 1
)

GetRDKit_FP(
  cmpDf,
  flavor = "CxSmiles",
  minPath = 1,
  maxPath = 7,
  useHs = TRUE,
  fpSize = 2048,
  count = FALSE,
  thread = 1
)

GetAp_FP(
  cmpDf,
  flavor = "CxSmiles",
  minDistance = 1,
  maxDistance = 30,
  fpSize = 2048,
  count = FALSE,
  thread = 1
)

GetTt_FP(cmpDf, flavor = "CxSmiles", fpSize = 2048, count = FALSE, thread = 1)

GetMaccs_FP(cmpDf, flavor = "CxSmiles", thread = 1)
}
\arguments{
\item{cmpDf}{A tibble with two column, id and smiles.}

\item{flavor}{Default is CxSmiles. More flavor please see \code{\link[rcdk]{smiles.flavors}}.}

\item{radius}{The radius defines the range of atomic neighbourhoods considered for th fingerprint calculation.}

\item{fpSize}{Size of the generated fingerprint.}

\item{count}{Whether it is a counted fingerprint.}

\item{thread}{Number of threads in parallel.}

\item{minPath}{The minimum path length (in bonds) to be included.}

\item{maxPath}{The maximum path length (in bonds) to be included.}

\item{useHs}{Toggles inclusion of Hs in paths (if the molecule has explicit Hs)}

\item{minDistance}{minimum distance between atoms to be considered in a pair, default is 1 bond.}

\item{maxDistance}{maximum distance between atoms to be considered in a pair, default is 7 bond.}
}
\value{
A tibble.
}
\description{
Use python package RDKit to calculate molecule fingerprint.
}
\examples{
data("cmpDf_demo", package = "LipRtPred")
fpsDf <- GetMorgan_FP(cmpDf = cmpDf_demo)
fpsDf <- GetFMorgan_FP(cmpDf = cmpDf_demo)
fpsDf <- GetRDKit_FP(cmpDf = cmpDf_demo)
fpsDf <- GetAp_FP(cmpDf = cmpDf_demo)
fpsDf <- GetTt_FP(cmpDf = cmpDf_demo)
fpsDf <- GetMaccs_FP(cmpDf = cmpDf_demo)
}
